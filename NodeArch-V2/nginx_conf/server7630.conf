# объявляем группу балансируемых серверов - в nginx она называется термином upstream
upstream backend {

  # в группе - два сервера, но может быть сколько угодно
  server 127.0.0.1:7631 max_fails=1 fail_timeout=30s; # как только сервер вернёт хотя бы одну ошибку - на 30 секунд считаем что он недоступен
  server 127.0.0.1:7632 max_fails=1 fail_timeout=30s;

  # по умолчанию запросы будут проксироваться по очереди, то на один то на другой сервер группы
  # но можно установить и другие стратегии, например, каждому клиенту (согласно его ip) - всегда один сервер
}

server {

  listen 7630;
  server_name nodearch.e-learning.by;

  access_log /home/nodeuser/NodeArch/nginx_logs/server7630-access.log main;
  error_log  /home/nodeuser/NodeArch/nginx_logs/server7630-error.log  error;

  # обращения к статике обслуживает сам nginx
  location ~ \.(css|jpg)$ {
    root /home/nodeuser/NodeArch/theme75/site_football2;
  }

  # обращения к html-страницам nginx будет проксировать на бэкенд на Express
  location ~ ^/page_([a-z]+)\.html$ {

    proxy_pass http://backend/getsportpage/$1; # проксируем, указывая вместо проксируемого сервера имя upstream-группы

    # переопределяем формат лога, т.к. у проксированных запросов есть другие атрибуты
    access_log /home/nodeuser/NodeArch/nginx_logs/server7630-proxy.log proxy;
  }

}
